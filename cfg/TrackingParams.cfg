#!/usr/bin/env python
PACKAGE = "mobilityaids_detector"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("pos_cov_threshold",    double_t, 0, "Max position covariance before track is deleted [m]",               4.0, 0.0, 10.0)
gen.add("mahalanobis_max_dist", double_t, 0, "Mahalanobis distance threshold for pairing detections to tracks", 7.815, 0.0, 13.0)
gen.add("euclidean_max_dist",   double_t, 0, "Euclidean distance threshold for pairing detections to tracks [m]", 1.0, 0.0,  5.0)

# We model the noise in the constant velocity motion model of the filter by an acceleration, 
# which ideally should work for different filter time frequencies. However, the acceleration
# noise does not take into account that while people can change their velocity quickly, 
# their final velocity is still limited. As a result, if the time step between frames is 
# rather large (compared to the 0.06s we used in our RAS paper), the uncertainty in velocity 
# and position grows large very quickly. The default accel_noise value of the filter was 
# 15.0 m/sec^2 for a filter time step of 0.06s, but we chose it lower here for processing live data 
gen.add("accel_noise",          double_t, 0, "expected acceleration of person [m/sec^2]",                          2.5, 0.0, 20.0)
gen.add("height_noise",         double_t, 0, "noise in height estimation of person [m]",                          0.25, 0.0,  1.0)
gen.add("init_vel_sigma",       double_t, 0, "initial velocity uncertainty of person [m/s]",                       1.5, 0.0,  2.5)
gen.add("hmm_transition_prob",  double_t, 0, "probability to transition from one hmm class to another",         0.0002, 0.0, 0.05)

gen.add("use_hmm",              bool_t,   0, "use hmm for class estimation of tracks",                                       True)

exit(gen.generate(PACKAGE, "mobilityaids_detector", "TrackingParams"))
